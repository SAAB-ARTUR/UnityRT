// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SAAB.Artur.Control
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public enum MessageType : byte
{
  NONE = 0,
  SetupMessage = 1,
  ControlMessage = 2,
  TraceNow = 3,
  ResponseHandled = 4,
};



static public class MessageTypeVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, byte typeId, uint tablePos)
  {
    bool result = true;
    switch((MessageType)typeId)
    {
      case MessageType.SetupMessage:
        result = SAAB.Artur.Control.SetupMessageVerify.Verify(verifier, tablePos);
        break;
      case MessageType.ControlMessage:
        result = SAAB.Artur.Control.ControlMessageVerify.Verify(verifier, tablePos);
        break;
      case MessageType.TraceNow:
        result = SAAB.Artur.Control.TraceNowVerify.Verify(verifier, tablePos);
        break;
      case MessageType.ResponseHandled:
        result = SAAB.Artur.Control.ResponseHandledVerify.Verify(verifier, tablePos);
        break;
      default: result = true;
        break;
    }
    return result;
  }
}

public struct Vec3 : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Vec3 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double X { get { return __p.bb.GetDouble(__p.bb_pos + 0); } }
  public double Y { get { return __p.bb.GetDouble(__p.bb_pos + 8); } }
  public double Z { get { return __p.bb.GetDouble(__p.bb_pos + 16); } }

  public static Offset<SAAB.Artur.Control.Vec3> CreateVec3(FlatBufferBuilder builder, double X, double Y, double Z) {
    builder.Prep(8, 24);
    builder.PutDouble(Z);
    builder.PutDouble(Y);
    builder.PutDouble(X);
    return new Offset<SAAB.Artur.Control.Vec3>(builder.Offset);
  }
}

public struct CylindricalCoord : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public CylindricalCoord __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double R { get { return __p.bb.GetDouble(__p.bb_pos + 0); } }
  public double Phi { get { return __p.bb.GetDouble(__p.bb_pos + 8); } }
  public double Z { get { return __p.bb.GetDouble(__p.bb_pos + 16); } }

  public static Offset<SAAB.Artur.Control.CylindricalCoord> CreateCylindricalCoord(FlatBufferBuilder builder, double R, double Phi, double Z) {
    builder.Prep(8, 24);
    builder.PutDouble(Z);
    builder.PutDouble(Phi);
    builder.PutDouble(R);
    return new Offset<SAAB.Artur.Control.CylindricalCoord>(builder.Offset);
  }
}

public struct AngleSpan : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public AngleSpan __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int NPhi { get { return __p.bb.GetInt(__p.bb_pos + 0); } }
  public double PhiSpan { get { return __p.bb.GetDouble(__p.bb_pos + 8); } }
  public int NTheta { get { return __p.bb.GetInt(__p.bb_pos + 16); } }
  public double ThetaSpan { get { return __p.bb.GetDouble(__p.bb_pos + 24); } }

  public static Offset<SAAB.Artur.Control.AngleSpan> CreateAngleSpan(FlatBufferBuilder builder, int NPhi, double PhiSpan, int NTheta, double ThetaSpan) {
    builder.Prep(8, 32);
    builder.PutDouble(ThetaSpan);
    builder.Pad(4);
    builder.PutInt(NTheta);
    builder.PutDouble(PhiSpan);
    builder.Pad(4);
    builder.PutInt(NPhi);
    return new Offset<SAAB.Artur.Control.AngleSpan>(builder.Offset);
  }
}

public struct SphericalDir : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public SphericalDir __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double Phi { get { return __p.bb.GetDouble(__p.bb_pos + 0); } }
  public double Theta { get { return __p.bb.GetDouble(__p.bb_pos + 8); } }

  public static Offset<SAAB.Artur.Control.SphericalDir> CreateSphericalDir(FlatBufferBuilder builder, double Phi, double Theta) {
    builder.Prep(8, 16);
    builder.PutDouble(Theta);
    builder.PutDouble(Phi);
    return new Offset<SAAB.Artur.Control.SphericalDir>(builder.Offset);
  }
}

public struct Sender : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static Sender GetRootAsSender(ByteBuffer _bb) { return GetRootAsSender(_bb, new Sender()); }
  public static Sender GetRootAsSender(ByteBuffer _bb, Sender obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Sender __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public SAAB.Artur.Control.Vec3? Position { get { int o = __p.__offset(4); return o != 0 ? (SAAB.Artur.Control.Vec3?)(new SAAB.Artur.Control.Vec3()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public SAAB.Artur.Control.AngleSpan? AngleSpan { get { int o = __p.__offset(6); return o != 0 ? (SAAB.Artur.Control.AngleSpan?)(new SAAB.Artur.Control.AngleSpan()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public SAAB.Artur.Control.SphericalDir? LookAt { get { int o = __p.__offset(8); return o != 0 ? (SAAB.Artur.Control.SphericalDir?)(new SAAB.Artur.Control.SphericalDir()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartSender(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<SAAB.Artur.Control.Vec3> positionOffset) { builder.AddStruct(0, positionOffset.Value, 0); }
  public static void AddAngleSpan(FlatBufferBuilder builder, Offset<SAAB.Artur.Control.AngleSpan> angleSpanOffset) { builder.AddStruct(1, angleSpanOffset.Value, 0); }
  public static void AddLookAt(FlatBufferBuilder builder, Offset<SAAB.Artur.Control.SphericalDir> lookAtOffset) { builder.AddStruct(2, lookAtOffset.Value, 0); }
  public static Offset<SAAB.Artur.Control.Sender> EndSender(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SAAB.Artur.Control.Sender>(o);
  }
}


static public class SenderVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Position*/, 24 /*SAAB.Artur.Control.Vec3*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*AngleSpan*/, 32 /*SAAB.Artur.Control.AngleSpan*/, 8, false)
      && verifier.VerifyField(tablePos, 8 /*LookAt*/, 16 /*SAAB.Artur.Control.SphericalDir*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct Reciever : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static Reciever GetRootAsReciever(ByteBuffer _bb) { return GetRootAsReciever(_bb, new Reciever()); }
  public static Reciever GetRootAsReciever(ByteBuffer _bb, Reciever obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Reciever __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public SAAB.Artur.Control.Vec3? Position { get { int o = __p.__offset(4); return o != 0 ? (SAAB.Artur.Control.Vec3?)(new SAAB.Artur.Control.Vec3()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartReciever(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<SAAB.Artur.Control.Vec3> positionOffset) { builder.AddStruct(0, positionOffset.Value, 0); }
  public static Offset<SAAB.Artur.Control.Reciever> EndReciever(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SAAB.Artur.Control.Reciever>(o);
  }
}


static public class RecieverVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Position*/, 24 /*SAAB.Artur.Control.Vec3*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SoundSpeedAtDepth : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public SoundSpeedAtDepth __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double Depth { get { return __p.bb.GetDouble(__p.bb_pos + 0); } }
  public double Speed { get { return __p.bb.GetDouble(__p.bb_pos + 8); } }

  public static Offset<SAAB.Artur.Control.SoundSpeedAtDepth> CreateSoundSpeedAtDepth(FlatBufferBuilder builder, double Depth, double Speed) {
    builder.Prep(8, 16);
    builder.PutDouble(Speed);
    builder.PutDouble(Depth);
    return new Offset<SAAB.Artur.Control.SoundSpeedAtDepth>(builder.Offset);
  }
}

public struct SetupMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static SetupMessage GetRootAsSetupMessage(ByteBuffer _bb) { return GetRootAsSetupMessage(_bb, new SetupMessage()); }
  public static SetupMessage GetRootAsSetupMessage(ByteBuffer _bb, SetupMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetupMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public SAAB.Artur.Control.SoundSpeedAtDepth? SoundSpeedProfile(int j) { int o = __p.__offset(4); return o != 0 ? (SAAB.Artur.Control.SoundSpeedAtDepth?)(new SAAB.Artur.Control.SoundSpeedAtDepth()).__assign(__p.__vector(o) + j * 16, __p.bb) : null; }
  public int SoundSpeedProfileLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public bool EigenRays { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int IntegrationSteps { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public double IntegrationStepSize { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public int MaxBottomHits { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MaxSurfaceHits { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool WaitForResponseHandled { get { int o = __p.__offset(16); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)true; } }

  public static Offset<SAAB.Artur.Control.SetupMessage> CreateSetupMessage(FlatBufferBuilder builder,
      VectorOffset sound_speed_profileOffset = default(VectorOffset),
      bool eigen_rays = false,
      int integration_steps = 0,
      double integration_step_size = 0.0,
      int max_bottom_hits = 0,
      int max_surface_hits = 0,
      bool wait_for_response_handled = true) {
    builder.StartTable(7);
    SetupMessage.AddIntegrationStepSize(builder, integration_step_size);
    SetupMessage.AddMaxSurfaceHits(builder, max_surface_hits);
    SetupMessage.AddMaxBottomHits(builder, max_bottom_hits);
    SetupMessage.AddIntegrationSteps(builder, integration_steps);
    SetupMessage.AddSoundSpeedProfile(builder, sound_speed_profileOffset);
    SetupMessage.AddWaitForResponseHandled(builder, wait_for_response_handled);
    SetupMessage.AddEigenRays(builder, eigen_rays);
    return SetupMessage.EndSetupMessage(builder);
  }

  public static void StartSetupMessage(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddSoundSpeedProfile(FlatBufferBuilder builder, VectorOffset soundSpeedProfileOffset) { builder.AddOffset(0, soundSpeedProfileOffset.Value, 0); }
  public static void StartSoundSpeedProfileVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(16, numElems, 8); }
  public static void AddEigenRays(FlatBufferBuilder builder, bool eigenRays) { builder.AddBool(1, eigenRays, false); }
  public static void AddIntegrationSteps(FlatBufferBuilder builder, int integrationSteps) { builder.AddInt(2, integrationSteps, 0); }
  public static void AddIntegrationStepSize(FlatBufferBuilder builder, double integrationStepSize) { builder.AddDouble(3, integrationStepSize, 0.0); }
  public static void AddMaxBottomHits(FlatBufferBuilder builder, int maxBottomHits) { builder.AddInt(4, maxBottomHits, 0); }
  public static void AddMaxSurfaceHits(FlatBufferBuilder builder, int maxSurfaceHits) { builder.AddInt(5, maxSurfaceHits, 0); }
  public static void AddWaitForResponseHandled(FlatBufferBuilder builder, bool waitForResponseHandled) { builder.AddBool(6, waitForResponseHandled, true); }
  public static Offset<SAAB.Artur.Control.SetupMessage> EndSetupMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SAAB.Artur.Control.SetupMessage>(o);
  }
}


static public class SetupMessageVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyVectorOfData(tablePos, 4 /*SoundSpeedProfile*/, 16 /*SAAB.Artur.Control.SoundSpeedAtDepth*/, false)
      && verifier.VerifyField(tablePos, 6 /*EigenRays*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 8 /*IntegrationSteps*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*IntegrationStepSize*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 12 /*MaxBottomHits*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*MaxSurfaceHits*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*WaitForResponseHandled*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct ControlMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static ControlMessage GetRootAsControlMessage(ByteBuffer _bb) { return GetRootAsControlMessage(_bb, new ControlMessage()); }
  public static ControlMessage GetRootAsControlMessage(ByteBuffer _bb, ControlMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ControlMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public SAAB.Artur.Control.Sender? Sender { get { int o = __p.__offset(4); return o != 0 ? (SAAB.Artur.Control.Sender?)(new SAAB.Artur.Control.Sender()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public SAAB.Artur.Control.Reciever? Reciever { get { int o = __p.__offset(6); return o != 0 ? (SAAB.Artur.Control.Reciever?)(new SAAB.Artur.Control.Reciever()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<SAAB.Artur.Control.ControlMessage> CreateControlMessage(FlatBufferBuilder builder,
      Offset<SAAB.Artur.Control.Sender> senderOffset = default(Offset<SAAB.Artur.Control.Sender>),
      Offset<SAAB.Artur.Control.Reciever> recieverOffset = default(Offset<SAAB.Artur.Control.Reciever>)) {
    builder.StartTable(2);
    ControlMessage.AddReciever(builder, recieverOffset);
    ControlMessage.AddSender(builder, senderOffset);
    return ControlMessage.EndControlMessage(builder);
  }

  public static void StartControlMessage(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddSender(FlatBufferBuilder builder, Offset<SAAB.Artur.Control.Sender> senderOffset) { builder.AddOffset(0, senderOffset.Value, 0); }
  public static void AddReciever(FlatBufferBuilder builder, Offset<SAAB.Artur.Control.Reciever> recieverOffset) { builder.AddOffset(1, recieverOffset.Value, 0); }
  public static Offset<SAAB.Artur.Control.ControlMessage> EndControlMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SAAB.Artur.Control.ControlMessage>(o);
  }
}


static public class ControlMessageVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyTable(tablePos, 4 /*Sender*/, SAAB.Artur.Control.SenderVerify.Verify, false)
      && verifier.VerifyTable(tablePos, 6 /*Reciever*/, SAAB.Artur.Control.RecieverVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct TraceNow : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static TraceNow GetRootAsTraceNow(ByteBuffer _bb) { return GetRootAsTraceNow(_bb, new TraceNow()); }
  public static TraceNow GetRootAsTraceNow(ByteBuffer _bb, TraceNow obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TraceNow __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartTraceNow(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<SAAB.Artur.Control.TraceNow> EndTraceNow(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SAAB.Artur.Control.TraceNow>(o);
  }
}


static public class TraceNowVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct ResponseHandled : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static ResponseHandled GetRootAsResponseHandled(ByteBuffer _bb) { return GetRootAsResponseHandled(_bb, new ResponseHandled()); }
  public static ResponseHandled GetRootAsResponseHandled(ByteBuffer _bb, ResponseHandled obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ResponseHandled __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResponseHandled(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<SAAB.Artur.Control.ResponseHandled> EndResponseHandled(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SAAB.Artur.Control.ResponseHandled>(o);
  }
}


static public class ResponseHandledVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct Message : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static Message GetRootAsMessage(ByteBuffer _bb) { return GetRootAsMessage(_bb, new Message()); }
  public static Message GetRootAsMessage(ByteBuffer _bb, Message obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyMessage(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, MessageVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Message __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public SAAB.Artur.Control.MessageType MessageType { get { int o = __p.__offset(4); return o != 0 ? (SAAB.Artur.Control.MessageType)__p.bb.Get(o + __p.bb_pos) : SAAB.Artur.Control.MessageType.NONE; } }
  public TTable? Message_<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public SAAB.Artur.Control.SetupMessage Message_AsSetupMessage() { return Message_<SAAB.Artur.Control.SetupMessage>().Value; }
  public SAAB.Artur.Control.ControlMessage Message_AsControlMessage() { return Message_<SAAB.Artur.Control.ControlMessage>().Value; }
  public SAAB.Artur.Control.TraceNow Message_AsTraceNow() { return Message_<SAAB.Artur.Control.TraceNow>().Value; }
  public SAAB.Artur.Control.ResponseHandled Message_AsResponseHandled() { return Message_<SAAB.Artur.Control.ResponseHandled>().Value; }

  public static Offset<SAAB.Artur.Control.Message> CreateMessage(FlatBufferBuilder builder,
      SAAB.Artur.Control.MessageType message_type = SAAB.Artur.Control.MessageType.NONE,
      int messageOffset = 0) {
    builder.StartTable(2);
    Message.AddMessage(builder, messageOffset);
    Message.AddMessageType(builder, message_type);
    return Message.EndMessage(builder);
  }

  public static void StartMessage(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddMessageType(FlatBufferBuilder builder, SAAB.Artur.Control.MessageType messageType) { builder.AddByte(0, (byte)messageType, 0); }
  public static void AddMessage(FlatBufferBuilder builder, int messageOffset) { builder.AddOffset(1, messageOffset, 0); }
  public static Offset<SAAB.Artur.Control.Message> EndMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SAAB.Artur.Control.Message>(o);
  }
  public static void FinishMessageBuffer(FlatBufferBuilder builder, Offset<SAAB.Artur.Control.Message> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedMessageBuffer(FlatBufferBuilder builder, Offset<SAAB.Artur.Control.Message> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class MessageVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*MessageType*/, 1 /*SAAB.Artur.Control.MessageType*/, 1, false)
      && verifier.VerifyUnion(tablePos, 4, 6 /*Message*/, SAAB.Artur.Control.MessageTypeVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
